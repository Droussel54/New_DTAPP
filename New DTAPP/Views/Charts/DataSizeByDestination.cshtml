@using static Constants
@model New_DTAPP.Models.TransferModel
@{
    ViewData["Title"] = "Charts";
}
<h1>Data Size By Destination</h1>
<form asp-action="DataSizeByDestination">
    <input type="hidden" name="filtered" value="ButtonClicked" />
    <div class="row">
        <div class="col">
            <div class="form-group">
                <label for="selectedUnit">Client Unit</label>
                @Html.DropDownList("selectedUnit", ViewBag.ClientUnitId, "", htmlAttributes: new { @class = "form-select" })

            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="raisedAfter">Raised After:</label>
                @Html.TextBox("raisedAfter", ViewBag.RaisedAfter, "", htmlAttributes: new { @class = "datefield form-select", type = "datetime-local" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="raisedBefore">Raised Before:</label>
                @Html.TextBox("raisedBefore", ViewBag.RaisedBefore, "", htmlAttributes: new { @class = "datefield form-select", type = "datetime-local" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="selectedCompletedUser">Completed User</label>
                @Html.DropDownList("selectedCompletedUser", ViewBag.CompletedUserId, "", htmlAttributes: new { @class = "form-select" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="filterSpillOccurred">Spill Occurred</label>
                @Html.CheckBox("filterSpillOccurred", ViewBag.FilterSpillOccurred, htmlAttributes: new { @class = "form-check" })
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="filterTransferDenied">Transfer Denied</label>
                @Html.CheckBox("filterTransferDenied", ViewBag.FilterTransferDenied, htmlAttributes: new { @class = "form-check" })
            </div>
        </div>
        <div class="col" style="align-self: end; text-align: end;">
            <button type="submit" style="border: 0; background: transparent">
                <img src="~/images/More.png" height="20" width="20" title="Filter" />
            </button>
            <a asp-action="DataSizeByDestination"
               asp-route-clearFilters="true">
                <img src="~/images/Cancel.png" height="20" width="20" title="Clear" />
            </a>
        </div>
    </div>
</form>
<style>
    #chartdiv {
        width: 100%;
        height: 65vh;
    }
</style>

<div id="chartdiv"></div>
<a class="btn btn-primary" asp-action="Index">Back</a>
<script src="~/js/amCharts/core.js"></script>
<script src="~/js/amCharts/charts.js"></script>
<script src="~/js/amCharts/themes/animated.js"></script>
<script>
    var json = '@ViewBag.jsonData';
    json = json.replaceAll("&quot;", "\"");
    var data = JSON.parse(json);

    am4core.addLicense('@Constants.licensekey');
    am4core.ready(function () {
        am4core.useTheme(am4themes_animated);
        var chart = am4core.create("chartdiv", am4charts.XYChart);
        chart.padding(40, 40, 40, 40);

        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
        categoryAxis.renderer.grid.template.location = 0;
        categoryAxis.dataFields.category = "destSys";
        categoryAxis.renderer.minGridDistance = 1;
        categoryAxis.renderer.inversed = true;
        categoryAxis.renderer.grid.template.disabled = true;

        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
        valueAxis.min = 0;

        var series = chart.series.push(new am4charts.ColumnSeries());
        series.dataFields.categoryY = "destSys";
        series.dataFields.valueX = "totalSize";
        series.tooltipText = "{valueX.value}"
        series.columns.template.strokeOpacity = 0;
        series.columns.template.column.cornerRadiusBottomRight = 5;
        series.columns.template.column.cornerRadiusTopRight = 5;

        var labelBullet = series.bullets.push(new am4charts.LabelBullet())
        labelBullet.label.horizontalCenter = "left";
        labelBullet.label.dx = 10;
        labelBullet.label.text = "{values.valueX.workingValue.formatNumber('#.0as')}";
        labelBullet.locationX = 1;

        // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
        series.columns.template.adapter.add("fill", function (fill, target) {
            return chart.colors.getIndex(target.dataItem.index);
        });

        categoryAxis.sortBySeries = series;
        chart.data = data;



    }); // end am4core.ready()

</script>